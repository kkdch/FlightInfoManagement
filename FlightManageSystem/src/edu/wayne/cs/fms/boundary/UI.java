/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.wayne.cs.fms.boundary;

import com.mongodb.BasicDBObject;
import com.mongodb.DB;
import com.mongodb.DBCollection;
import com.mongodb.DBCursor;
import com.mongodb.DBObject;
import com.mongodb.MongoClient;
import com.mongodb.util.JSON;
import edu.wayne.cs.fms.controller.CRUD;
import edu.wayne.cs.fms.controller.Connector;
import edu.wayne.cs.fms.controller.TxtReader;
import edu.wayne.cs.fms.entity.FlightInfo;
import edu.wayne.cs.fms.entity.SearchInfo;
import java.io.IOException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Locale;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.bson.types.ObjectId;

/**
 *
 * @author daichenhan
 */
public class UI extends javax.swing.JFrame {

    /**
     * Creates new form UI
     */
    public UI() {
        initComponents();
        //result.getColumnModel().getColumn(0).setPreferredWidth(100);
        //int width;
        //int height;
        //width = Toolkit.getDefaultToolkit().getScreenSize().width;
        //height = Toolkit.getDefaultToolkit().getScreenSize().height;
        setSize(770, 600);
        setLocationRelativeTo(null);
        //result.getColumnModel().getColumn(1).setPreferredWidth(100);
    }
    private static UI mui = new UI();
    private static boolean showtext = true;
    private static String id = null;
    private static int i = 1;
    private static MongoClient mongoClient;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        insertF = new javax.swing.JFrame();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Carrier = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        Tainum = new javax.swing.JTextField();
        Depcity = new javax.swing.JTextField();
        Arrcity = new javax.swing.JTextField();
        Crsdeptime = new javax.swing.JTextField();
        Crsarrtime = new javax.swing.JTextField();
        submit = new javax.swing.JButton();
        cancel = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        Distance = new javax.swing.JTextField();
        ifcancel = new javax.swing.JCheckBox();
        jLabel12 = new javax.swing.JLabel();
        deptime = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        arrtime = new javax.swing.JTextField();
        updateF = new javax.swing.JFrame();
        jPanel4 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        Carrier1 = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        Tainum1 = new javax.swing.JTextField();
        Depcity1 = new javax.swing.JTextField();
        Arrcity1 = new javax.swing.JTextField();
        Crsdeptime1 = new javax.swing.JTextField();
        Crsarrtime1 = new javax.swing.JTextField();
        submit1 = new javax.swing.JButton();
        cancel1 = new javax.swing.JButton();
        jLabel33 = new javax.swing.JLabel();
        Distance1 = new javax.swing.JTextField();
        ifcancel1 = new javax.swing.JCheckBox();
        jLabel34 = new javax.swing.JLabel();
        deptime1 = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        arrtime1 = new javax.swing.JTextField();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        edit = new javax.swing.JMenuItem();
        remove = new javax.swing.JMenuItem();
        mapreduce = new javax.swing.JFrame();
        jScrollPane2 = new javax.swing.JScrollPane();
        mapresult = new javax.swing.JTextArea();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        downdeptime = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        updeptime = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        downarrtime = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        uparrtime = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        downdistance = new javax.swing.JTextField();
        updistance = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        cancelyes = new javax.swing.JCheckBox();
        search = new javax.swing.JButton();
        jLabel23 = new javax.swing.JLabel();
        cancelno = new javax.swing.JCheckBox();
        jLabel24 = new javax.swing.JLabel();
        depcity = new javax.swing.JTextField();
        depstate = new javax.swing.JTextField();
        arrcity = new javax.swing.JTextField();
        arrstate = new javax.swing.JTextField();
        carrier = new javax.swing.JTextField();
        tailnum = new javax.swing.JTextField();
        searchinresults = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        result = new javax.swing.JTable();
        count = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        Connect = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        mapreduce1 = new javax.swing.JMenuItem();
        mapreduce2 = new javax.swing.JMenuItem();
        mapreduce3 = new javax.swing.JMenuItem();
        mapreduce4 = new javax.swing.JMenuItem();
        mapreduce5 = new javax.swing.JMenuItem();
        mapreduce6 = new javax.swing.JMenuItem();
        mapreduce7 = new javax.swing.JMenuItem();
        mapreduce8 = new javax.swing.JMenuItem();

        jPanel1.setMinimumSize(new java.awt.Dimension(613, 483));

        jLabel5.setText("Please fill all necessary information ");

        jLabel6.setText("Date:");

        jLabel4.setText("Carrier:");

        Carrier.setText("MU");
        Carrier.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CarrierActionPerformed(evt);
            }
        });

        jLabel7.setText("FlightNum:");

        jLabel8.setText("DepCity:");

        jLabel9.setText("ArrCity:");

        jLabel10.setText("CrsDepTime:");

        jLabel11.setText("CrsArrTime:");

        Tainum.setText("A123B4");

        Depcity.setText("Detroit");

        Arrcity.setText("Shanghai");
        Arrcity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ArrcityActionPerformed(evt);
            }
        });

        Crsdeptime.setText("1200");

        Crsarrtime.setText("1800");

        submit.setText("Submit");
        submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitActionPerformed(evt);
            }
        });

        cancel.setText("cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        jLabel14.setText("Distance:");

        Distance.setText("10000");
        Distance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DistanceActionPerformed(evt);
            }
        });

        ifcancel.setText("Flight had been cancelled");
        ifcancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ifcancelActionPerformed(evt);
            }
        });

        jLabel12.setText("DepTime:");

        deptime.setText("1400");
        deptime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deptimeActionPerformed(evt);
            }
        });

        jLabel13.setText("ArrTime:");

        arrtime.setText("2000");
        arrtime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arrtimeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addGap(0, 10, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Crsdeptime, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel6))
                                .addGap(33, 33, 33)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Carrier)
                                    .addComponent(Depcity, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(18, 18, 18)
                                .addComponent(Distance))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(31, 31, 31)
                                .addComponent(Arrcity))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addGap(25, 25, 25)
                                .addComponent(Tainum))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(submit)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cancel)
                                        .addContainerGap())
                                    .addComponent(Crsarrtime)
                                    .addComponent(arrtime)))))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ifcancel)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel12)
                        .addGap(29, 29, 29)
                        .addComponent(deptime, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel13)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(Carrier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(Tainum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel9)
                            .addComponent(Depcity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Arrcity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11)
                            .addComponent(Crsdeptime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Crsarrtime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel14)
                        .addComponent(Distance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addComponent(ifcancel)
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(deptime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(arrtime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submit)
                    .addComponent(cancel))
                .addGap(41, 41, 41))
        );

        javax.swing.GroupLayout insertFLayout = new javax.swing.GroupLayout(insertF.getContentPane());
        insertF.getContentPane().setLayout(insertFLayout);
        insertFLayout.setHorizontalGroup(
            insertFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(insertFLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        insertFLayout.setVerticalGroup(
            insertFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(insertFLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel4.setMinimumSize(new java.awt.Dimension(613, 483));

        jLabel25.setText("Please update all necessary information ");

        jLabel26.setText("Date:");

        jLabel27.setText("Carrier:");

        Carrier1.setText("MU");
        Carrier1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Carrier1ActionPerformed(evt);
            }
        });

        jLabel28.setText("FlightNum:");

        jLabel29.setText("DepCity:");

        jLabel30.setText("ArrCity:");

        jLabel31.setText("CrsDepTime:");

        jLabel32.setText("CrsArrTime:");

        Tainum1.setText("A123B4");

        Depcity1.setText("Detroit");

        Arrcity1.setText("Shanghai");
        Arrcity1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Arrcity1ActionPerformed(evt);
            }
        });

        Crsdeptime1.setText("1200");

        Crsarrtime1.setText("1800");

        submit1.setText("Submit");
        submit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submit1ActionPerformed(evt);
            }
        });

        cancel1.setText("cancel");
        cancel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancel1ActionPerformed(evt);
            }
        });

        jLabel33.setText("Distance:");

        Distance1.setText("10000");
        Distance1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Distance1ActionPerformed(evt);
            }
        });

        ifcancel1.setText("Flight had been cancelled");
        ifcancel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ifcancel1ActionPerformed(evt);
            }
        });

        jLabel34.setText("DepTime:");

        deptime1.setText("1400");
        deptime1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deptime1ActionPerformed(evt);
            }
        });

        jLabel35.setText("ArrTime:");

        arrtime1.setText("2000");
        arrtime1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                arrtime1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel25)
                        .addGap(0, 10, Short.MAX_VALUE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel31)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Crsdeptime1, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel27)
                                    .addComponent(jLabel29)
                                    .addComponent(jLabel26))
                                .addGap(33, 33, 33)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Carrier1)
                                    .addComponent(Depcity1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel33)
                                .addGap(18, 18, 18)
                                .addComponent(Distance1))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel30)
                                .addGap(31, 31, 31)
                                .addComponent(Arrcity1))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel28)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Tainum1))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel32)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(submit1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cancel1)
                                        .addContainerGap())
                                    .addComponent(Crsarrtime1)
                                    .addComponent(arrtime1)))))))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ifcancel1)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel34)
                        .addGap(29, 29, 29)
                        .addComponent(deptime1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel35)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel25)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel26)
                        .addGap(26, 26, 26)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27)
                            .addComponent(Carrier1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28)
                            .addComponent(Tainum1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel29)
                            .addComponent(jLabel30)
                            .addComponent(Depcity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Arrcity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel31)
                            .addComponent(jLabel32)
                            .addComponent(Crsdeptime1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Crsarrtime1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel33)
                        .addComponent(Distance1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(30, 30, 30)
                .addComponent(ifcancel1)
                .addGap(29, 29, 29)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel34)
                    .addComponent(deptime1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35)
                    .addComponent(arrtime1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(submit1)
                    .addComponent(cancel1))
                .addGap(41, 41, 41))
        );

        javax.swing.GroupLayout updateFLayout = new javax.swing.GroupLayout(updateF.getContentPane());
        updateF.getContentPane().setLayout(updateFLayout);
        updateFLayout.setHorizontalGroup(
            updateFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateFLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        updateFLayout.setVerticalGroup(
            updateFLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updateFLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPopupMenu1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        edit.setText("edit");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        jPopupMenu1.add(edit);

        remove.setText("remove");
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });
        jPopupMenu1.add(remove);

        mapresult.setEditable(false);
        mapresult.setColumns(20);
        mapresult.setRows(5);
        jScrollPane2.setViewportView(mapresult);

        javax.swing.GroupLayout mapreduceLayout = new javax.swing.GroupLayout(mapreduce.getContentPane());
        mapreduce.getContentPane().setLayout(mapreduceLayout);
        mapreduceLayout.setHorizontalGroup(
            mapreduceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mapreduceLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                .addContainerGap())
        );
        mapreduceLayout.setVerticalGroup(
            mapreduceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(mapreduceLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 288, Short.MAX_VALUE)
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Conditions"));

        jLabel1.setText("Date from:");

        jLabel2.setText("to");

        jLabel3.setText("DepTime from:");

        downdeptime.setToolTipText("example(10:00 as 1000)");

        jLabel15.setText("to");

        updeptime.setToolTipText("example(12:00 as 1200)");

        jLabel16.setText("ArrTime from:");

        downarrtime.setToolTipText("example(15:00 as 1500)");

        jLabel17.setText("to");

        uparrtime.setToolTipText("example(18:00 as 1800)");

        jLabel18.setText("Distance from:");

        jLabel19.setText("to");
        jLabel19.setToolTipText("");

        jLabel20.setText("DepCity:");

        jLabel21.setText("Carrier:");

        jLabel22.setText("FlightNum:");

        cancelyes.setText("Yes");

        search.setText("New Search");
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });

        jLabel23.setText("ArrCity:");

        cancelno.setText("No");

        jLabel24.setText("Cancelled:");

        depcity.setToolTipText("City");

        depstate.setToolTipText("State");

        arrcity.setToolTipText("City");

        arrstate.setToolTipText("State");

        searchinresults.setText("Search in Results");
        searchinresults.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchinresultsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addComponent(jLabel24))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addComponent(cancelyes)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cancelno))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addComponent(downdistance))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(downdeptime, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(downarrtime)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel15)
                            .addComponent(jLabel17)
                            .addComponent(jLabel19))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(updeptime, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(uparrtime, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(updistance, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel23)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21)
                            .addComponent(jLabel22))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(depcity, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(depstate, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(arrcity, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(arrstate))
                            .addComponent(carrier)
                            .addComponent(tailnum)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchinresults)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(depcity, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel20)
                            .addComponent(depstate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(downdeptime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(updeptime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(arrcity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(arrstate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel16)
                        .addComponent(downarrtime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel21)
                        .addComponent(carrier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(uparrtime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(downdistance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(updistance, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel22)
                    .addComponent(tailnum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cancelyes)
                        .addComponent(cancelno)
                        .addComponent(jLabel24))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(search)
                        .addComponent(searchinresults))))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Results"));

        result.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Document"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        result.setComponentPopupMenu(jPopupMenu1);
        jScrollPane1.setViewportView(result);

        count.setEditable(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(count, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(count, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );

        jMenu1.setText("Operations");

        jMenuItem1.setText("Insert");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        Connect.setText("Connect");
        Connect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConnectActionPerformed(evt);
            }
        });
        jMenu1.add(Connect);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Mapreduce");

        mapreduce1.setText("mapreduce1");
        mapreduce1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mapreduce1ActionPerformed(evt);
            }
        });
        jMenu2.add(mapreduce1);

        mapreduce2.setText("mapreduce2");
        mapreduce2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mapreduce2ActionPerformed(evt);
            }
        });
        jMenu2.add(mapreduce2);

        mapreduce3.setText("mapreduce3");
        mapreduce3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mapreduce3ActionPerformed(evt);
            }
        });
        jMenu2.add(mapreduce3);

        mapreduce4.setText("mapreduce4");
        mapreduce4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mapreduce4ActionPerformed(evt);
            }
        });
        jMenu2.add(mapreduce4);

        mapreduce5.setText("mapreduce5");
        mapreduce5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mapreduce5ActionPerformed(evt);
            }
        });
        jMenu2.add(mapreduce5);

        mapreduce6.setText("mapreduce6");
        mapreduce6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mapreduce6ActionPerformed(evt);
            }
        });
        jMenu2.add(mapreduce6);

        mapreduce7.setText("mapreduce7");
        mapreduce7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mapreduce7ActionPerformed(evt);
            }
        });
        jMenu2.add(mapreduce7);

        mapreduce8.setText("mapreduce8");
        mapreduce8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mapreduce8ActionPerformed(evt);
            }
        });
        jMenu2.add(mapreduce8);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void CarrierActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CarrierActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CarrierActionPerformed

    private void ArrcityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ArrcityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ArrcityActionPerformed

    private void submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitActionPerformed
        // TODO add your handling code here:
        //MainUI mui = new MainUI();
        FlightInfo newInfo = new FlightInfo();
        JFrame frame = null;
        newInfo.setArrCity(mui.Arrcity.getText());
        if (mui.ifcancel.isSelected()) {
            newInfo.setCancel(1);
        } else {
            newInfo.setCancel(0);
        }
        newInfo.setCarrier(mui.Carrier.getText());
        //newInfo.setDate(mui.date.getDateEditor().getUiComponent().getToolTipText());
        Date dateFromDateChooser = mui.date.getDate();
        String dateString = String.format("%1$tY-%1$tm-%1$td", dateFromDateChooser);
        newInfo.setDate(dateString);
        int crsdeptime, crsarrtime;
        crsdeptime = Integer.parseInt(mui.Crsdeptime.getText());
        crsarrtime = Integer.parseInt(mui.Crsarrtime.getText());
        newInfo.setCrsDepTime(crsdeptime);
        newInfo.setCrsArrTime(crsarrtime);

        newInfo.setCrsArrTime(Integer.parseInt(mui.Crsarrtime.getText()));
        newInfo.setTailNum(mui.Tainum.getText());
        newInfo.setDepCity(mui.Depcity.getText());
        newInfo.setDistance(Integer.parseInt(mui.Distance.getText()));

        int deptime, arrtime, depdelay, arrdelay;
        deptime = Integer.parseInt(mui.deptime.getText());
        arrtime = Integer.parseInt(mui.arrtime.getText());
        depdelay = ((deptime / 100) * 60 + deptime % 100) - ((crsdeptime / 100) * 60 + crsdeptime % 100);
        arrdelay = ((arrtime / 100) * 60 + arrtime % 100) - ((crsarrtime / 100) * 60 + crsarrtime % 100);
        newInfo.setDepTime(deptime);
        newInfo.setArrTime(arrtime);
        newInfo.setDepDelay(depdelay);
        newInfo.setArrDelay(arrdelay);

        CRUD.Insert(newInfo, mongoClient);
        JOptionPane.showMessageDialog(frame, "Insert Success!");
        mui.insertF.setVisible(false);
    }//GEN-LAST:event_submitActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        // TODO add your handling code here:
        //JFrame frame = null;
        //JOptionPane.showMessageDialog(frame, "Cancel insert!");
        mui.insertF.setVisible(false);
    }//GEN-LAST:event_cancelActionPerformed

    private void DistanceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DistanceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DistanceActionPerformed

    private void ifcancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ifcancelActionPerformed
        // TODO add your handling code here:
        if (showtext) {
            mui.deptime.setEnabled(false);
            mui.arrtime.setEnabled(false);
            showtext = false;
        } else {
            mui.deptime.setEnabled(true);
            mui.arrtime.setEnabled(true);
            showtext = true;
        }
    }//GEN-LAST:event_ifcancelActionPerformed

    private void deptimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deptimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deptimeActionPerformed

    private void arrtimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arrtimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_arrtimeActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        mui.insertF.setSize(650, 450);
        mui.insertF.setLocationRelativeTo(null);
        mui.insertF.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
        SearchInfo sInfo = new SearchInfo();
        for (int j = 1; j < i + 1; j++) {
            CRUD.DropCol("a" + Integer.toString(j), mongoClient);
        }
        i = 1;
        CRUD.CreateCol("a" + Integer.toString(i), mongoClient);

        if (downdate.getDate() != null && update.getDate() != null) {
            Date dateFromDateChooser = downdate.getDate();
            String dateString = String.format("%1$tY-%1$tm-%1$td", dateFromDateChooser);
            sInfo.setDownDate(dateString);
            Date dateFromDateChooserUp = update.getDate();
            String updateString = String.format("%1$tY-%1$tm-%1$td", dateFromDateChooserUp);
            sInfo.setUpDate(updateString);
        }
        if (!(downdeptime.getText().trim().equals(""))) {
            sInfo.setDownDepTime(Integer.parseInt(downdeptime.getText()));
        }
        if (!(updeptime.getText().trim().equals(""))) {
            sInfo.setUpDepTime(Integer.parseInt(updeptime.getText()));
        }
        if (!(uparrtime.getText().trim().equals(""))) {
            sInfo.setUpArrTime(Integer.parseInt(uparrtime.getText()));
        }

        if (!(downarrtime.getText().trim().equals(""))) {
            sInfo.setDownArrTime(Integer.parseInt(downarrtime.getText()));
        }
        if (!(updistance.getText().trim().equals(""))) {
            sInfo.setUpDis(Integer.parseInt(updistance.getText()));
        }
        if (!(downdistance.getText().trim().equals(""))) {
            sInfo.setDownDis(Integer.parseInt(downdistance.getText()));
        }
        if (!(carrier.getText().trim().equals(""))) {
            sInfo.setCarrier(carrier.getText());
        }
        if (!(tailnum.getText().trim().equals(""))) {
            sInfo.setTailNum(Integer.parseInt(tailnum.getText()));
        }
        if (!(depcity.getText().trim().equals(""))) {
            sInfo.setDepCity(depcity.getText() + ", " + depstate.getText());
        }
        if (!(arrcity.getText().trim().equals(""))) {
            sInfo.setArrCity(arrcity.getText() + ", " + arrstate.getText());
        }
        if (!(cancelyes.isSelected() == cancelno.isSelected())) {
            if (cancelyes.isSelected()) {
                sInfo.setCancel(1);
            } else {
                sInfo.setCancel(0);
            }
        }
        DBCursor cursor = CRUD.Search(sInfo, "flight", mongoClient);
        DefaultTableModel myTmodel = new DefaultTableModel();
        String[] colNames = {"id", "document"};
        for (int i = 0; i < 2; i++) {
            myTmodel.addColumn(colNames[i]);
        }
        int c=0;
        while (cursor.hasNext()) {
            Vector v = new Vector();
            DBObject str = cursor.next();
            v.add(str.get("_id"));
            String re=new String();
            re=re+(str.get("FL_DATE").toString())+", ";
            re=re+(str.get("UNIQUE_CARRIER").toString())+(str.get("FL_NUM"))+", ";
            re=re+(str.get("ORIGIN_CITY_NAME").toString())+"-"+(str.get("DEST_CITY_NAME").toString())+", ";
            re=re+(str.get("CRS_DEP_TIME").toString())+"-"+(str.get("CRS_ARR_TIME").toString());
            v.add(re);
            CRUD.Save(str, "a" + Integer.toString(i), mongoClient);
            myTmodel.addRow(v);
            c++;
        }
        count.setText(Integer.toString(c));
        count.updateUI();
        result.setModel(myTmodel);
        result.updateUI();
    }//GEN-LAST:event_searchActionPerformed

    private void Carrier1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Carrier1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Carrier1ActionPerformed

    private void Arrcity1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Arrcity1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Arrcity1ActionPerformed

    private void submit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submit1ActionPerformed
        // TODO add your handling code here:
        FlightInfo newInfo = new FlightInfo();
        JFrame frame = null;
        newInfo.setArrCity(mui.Arrcity1.getText());
        if (mui.ifcancel1.isSelected()) {
            newInfo.setCancel(1);
        } else {
            newInfo.setCancel(0);
        }
        newInfo.setCarrier(mui.Carrier1.getText());
        //newInfo.setDate(mui.date.getDateEditor().getUiComponent().getToolTipText());
        Date dateFromDateChooser = mui.date1.getDate();
        String dateString = String.format("%1$tY-%1$tm-%1$td", dateFromDateChooser);
        newInfo.setDate(dateString);
        int crsdeptime, crsarrtime;
        crsdeptime = Integer.parseInt(mui.Crsdeptime1.getText());
        crsarrtime = Integer.parseInt(mui.Crsarrtime1.getText());
        newInfo.setCrsDepTime(crsdeptime);
        newInfo.setCrsArrTime(crsarrtime);

        newInfo.setCrsArrTime(Integer.parseInt(mui.Crsarrtime1.getText()));
        newInfo.setTailNum(mui.Tainum1.getText());
        newInfo.setDepCity(mui.Depcity1.getText());
        newInfo.setDistance(Integer.parseInt(mui.Distance1.getText()));

        int deptime, arrtime, depdelay, arrdelay;
        deptime = Integer.parseInt(mui.deptime1.getText());
        arrtime = Integer.parseInt(mui.arrtime1.getText());
        depdelay = ((deptime / 100) * 60 + deptime % 100) - ((crsdeptime / 100) * 60 + crsdeptime % 100);
        arrdelay = ((arrtime / 100) * 60 + arrtime % 100) - ((crsarrtime / 100) * 60 + crsarrtime % 100);
        newInfo.setDepTime(deptime);
        newInfo.setArrTime(arrtime);
        newInfo.setDepDelay(depdelay);
        newInfo.setArrDelay(arrdelay);
        CRUD.Update(id, newInfo, mongoClient);

        JFrame frame1 = null;
        JOptionPane.showMessageDialog(frame1, "Update Complete!");
        mui.updateF.setVisible(false);

        //mui.searchActionPerformed(evt);
        //mui.updateF.setVisible(false);

    }//GEN-LAST:event_submit1ActionPerformed

    private void cancel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancel1ActionPerformed
        // TODO add your handling code here:
        //JFrame frame = null;
        //JOptionPane.showMessageDialog(frame, "Cancel insert!");
        mui.updateF.setVisible(false);
    }//GEN-LAST:event_cancel1ActionPerformed

    private void Distance1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Distance1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Distance1ActionPerformed

    private void ifcancel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ifcancel1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ifcancel1ActionPerformed

    private void deptime1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deptime1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deptime1ActionPerformed

    private void arrtime1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_arrtime1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_arrtime1ActionPerformed

    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        // TODO add your handling code here:
        int u = result.getSelectedRow();
        id = result.getValueAt(u, 0).toString();
        System.out.println(id);
        ObjectId oId = new ObjectId(id);
        BasicDBObject query = new BasicDBObject("_id",oId);
        System.out.println(query);
        DB db = mongoClient.getDB("project");
        DBCollection flight = db.getCollection("flight");
        DBCursor cur = flight.find(query);
        DBObject doc = cur.next();
        mui.Arrcity1.setText(doc.get("DEST_CITY_NAME").toString());
        mui.Carrier1.setText(doc.get("UNIQUE_CARRIER").toString());
        mui.Crsarrtime1.setText(doc.get("CRS_ARR_TIME").toString());
        mui.Crsdeptime1.setText(doc.get("CRS_DEP_TIME").toString());
        mui.Depcity1.setText(doc.get("ORIGIN_CITY_NAME").toString());
        mui.Distance1.setText(doc.get("DISTANCE").toString());
        mui.Tainum1.setText(doc.get("FL_NUM").toString());
        if ((Double) doc.get("CANCELLED") == 1) {
            mui.ifcancel1.setSelected(true);
        } else {
            mui.ifcancel1.setSelected(false);
        }
        Date d = null;
        try {
            d = new SimpleDateFormat("yyyy-MM-dd", Locale.ENGLISH).parse(doc.get("FL_DATE").toString());
        } catch (ParseException ex) {
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        }
        mui.date1.setDate(d);
        mui.updateF.setSize(650, 450);
        mui.updateF.setLocationRelativeTo(null);
        mui.updateF.setVisible(true);
    }//GEN-LAST:event_editActionPerformed

    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
        // TODO add your handling code here:
        int u = result.getSelectedRow();
        String id = result.getValueAt(u, 0).toString();
        CRUD.Delete(id, mongoClient);
        searchActionPerformed(evt);
    }//GEN-LAST:event_removeActionPerformed

    private void searchinresultsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchinresultsActionPerformed
        // TODO add your handling code here:
        SearchInfo sInfo = new SearchInfo();

        if (downdate.getDate() != null && update.getDate() != null) {
            Date dateFromDateChooser = downdate.getDate();
            String dateString = String.format("%1$tY-%1$tm-%1$td", dateFromDateChooser);
            sInfo.setDownDate(dateString);
            Date dateFromDateChooserUp = update.getDate();
            String updateString = String.format("%1$tY-%1$tm-%1$td", dateFromDateChooserUp);
            sInfo.setUpDate(updateString);
        }
        if (!(downdeptime.getText().trim().equals(""))) {
            sInfo.setDownDepTime(Integer.parseInt(downdeptime.getText()));
        }
        if (!(updeptime.getText().trim().equals(""))) {
            sInfo.setUpDepTime(Integer.parseInt(updeptime.getText()));
        }
        if (!(uparrtime.getText().trim().equals(""))) {
            sInfo.setUpArrTime(Integer.parseInt(uparrtime.getText()));
        }

        if (!(downarrtime.getText().trim().equals(""))) {
            sInfo.setDownArrTime(Integer.parseInt(downarrtime.getText()));
        }
        if (!(updistance.getText().trim().equals(""))) {
            sInfo.setUpDis(Integer.parseInt(updistance.getText()));
        }
        if (!(downdistance.getText().trim().equals(""))) {
            sInfo.setDownDis(Integer.parseInt(downdistance.getText()));
        }
        if (!(carrier.getText().trim().equals(""))) {
            sInfo.setCarrier(carrier.getText());
        }
        if (!(tailnum.getText().trim().equals(""))) {
            sInfo.setTailNum(Integer.parseInt(tailnum.getText()));
        }
        if (!(depcity.getText().trim().equals(""))) {
            sInfo.setDepCity(depcity.getText() + ", " + depstate.getText());
        }
        if (!(arrcity.getText().trim().equals(""))) {
            sInfo.setArrCity(arrcity.getText() + ", " + arrstate.getText());
        }
        if (!(cancelyes.isSelected() == cancelno.isSelected())) {
            if (cancelyes.isSelected()) {
                sInfo.setCancel(1);
            } else {
                sInfo.setCancel(0);
            }
        }
        DBCursor cursor = CRUD.Search(sInfo, "a" + Integer.toString(i), mongoClient);
        i = i + 1;
        CRUD.CreateCol("a" + Integer.toString(i), mongoClient);
        DefaultTableModel myTmodel = new DefaultTableModel();
        String[] colNames = {"id", "document"};
        for (int i = 0; i < 2; i++) {
            myTmodel.addColumn(colNames[i]);
        }
        int c=0;
        while (cursor.hasNext()) {
            Vector v = new Vector();
            DBObject str = cursor.next();
            v.add(str.get("_id"));
            String re=new String();
            re=re+(str.get("FL_DATE").toString())+", ";
            re=re+(str.get("UNIQUE_CARRIER").toString())+(str.get("FL_NUM"))+", ";
            re=re+(str.get("ORIGIN_CITY_NAME").toString())+"-"+(str.get("DEST_CITY_NAME").toString())+", ";
            re=re+(str.get("CRS_DEP_TIME").toString())+"-"+(str.get("CRS_ARR_TIME").toString());
            v.add(re);
            CRUD.Save(str, "a" + Integer.toString(i), mongoClient);
            myTmodel.addRow(v);
            c++;
        }
        count.setText(Integer.toString(c));
        count.updateUI();
        result.setModel(myTmodel);
        result.updateUI();
    }//GEN-LAST:event_searchinresultsActionPerformed

    private void mapreduce1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mapreduce1ActionPerformed
        // TODO add your handling code here:
        String map = null;
        String reduce = null;
        String finalize = null;
        mapresult.setText("");
        mapresult.updateUI();
        mapreduce.setSize(650, 450);
        mapreduce.setLocationRelativeTo(null);
        mapreduce.setVisible(true);
        try {
            map = TxtReader.Read("mapreduce/map_1.txt");
            reduce = TxtReader.Read("mapreduce/reduce_1.txt");
            finalize = TxtReader.Read("mapreduce/finalize_1.txt");
        } catch (IOException ex) {
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        }

        System.out.println(map);
        System.out.println(reduce);
        System.out.println(finalize);
        System.out.println(i);
        ArrayList result = new ArrayList(CRUD.MapReduce("a" + Integer.toString(i), map, reduce, finalize, mongoClient));
        for (int j = 0; j < result.size(); j++) {
            mapresult.append(result.get(j).toString() + "\n");
        }
        mapresult.updateUI();
    }//GEN-LAST:event_mapreduce1ActionPerformed

    private void mapreduce2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mapreduce2ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        String map = null;
        String reduce = null;
        String finalize = null;
        mapresult.setText("");
        mapresult.updateUI();
        mapresult.updateUI();
        mapreduce.setSize(650, 450);
        mapreduce.setLocationRelativeTo(null);
        mapreduce.setVisible(true);
        try {
            map = TxtReader.Read("mapreduce/map_2.txt");
            reduce = TxtReader.Read("mapreduce/reduce_2.txt");
            finalize = TxtReader.Read("mapreduce/finalize_2.txt");
        } catch (IOException ex) {
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        }

        System.out.println(map);
        System.out.println(reduce);
        System.out.println(finalize);
        ArrayList result = new ArrayList(CRUD.MapReduce("a" + Integer.toString(i), map, reduce, finalize, mongoClient));

        for (int j = 0; j < result.size(); j++) {
            mapresult.append(result.get(j).toString() + "\n");
        }
        mapresult.updateUI();
    }//GEN-LAST:event_mapreduce2ActionPerformed

    private void mapreduce3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mapreduce3ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        // TODO add your handling code here:
        String map = null;
        String reduce = null;
        String finalize = null;
        mapresult.setText("");
        mapresult.updateUI();
        mapreduce.setSize(650, 450);
        mapreduce.setLocationRelativeTo(null);
        mapreduce.setVisible(true);
        try {
            map = TxtReader.Read("mapreduce/map_3.txt");
            reduce = TxtReader.Read("mapreduce/reduce_3.txt");
            finalize = TxtReader.Read("mapreduce/finalize_3.txt");
        } catch (IOException ex) {
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        }

        System.out.println(map);
        System.out.println(reduce);
        System.out.println(finalize);
        ArrayList result = new ArrayList(CRUD.MapReduce("a" + Integer.toString(i), map, reduce, finalize, mongoClient));
        //mapresult.setText("");
        for (int j = 0; j < result.size(); j++) {
            mapresult.append(result.get(j).toString() + "\n");
        }
        mapresult.updateUI();
    }//GEN-LAST:event_mapreduce3ActionPerformed

    private void mapreduce4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mapreduce4ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        // TODO add your handling code here:
        String map = null;
        String reduce = null;
        String finalize = null;
        mapresult.setText("");
        mapresult.updateUI();
        mapreduce.setSize(650, 450);
        mapreduce.setLocationRelativeTo(null);
        mapreduce.setVisible(true);
        try {
            map = TxtReader.Read("mapreduce/map_4.txt");
            reduce = TxtReader.Read("mapreduce/reduce_4.txt");
            finalize = TxtReader.Read("mapreduce/finalize_4.txt");
        } catch (IOException ex) {
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        }

        System.out.println(map);
        System.out.println(reduce);
        System.out.println(finalize);
        ArrayList result = new ArrayList(CRUD.MapReduce("a" + Integer.toString(i), map, reduce, finalize, mongoClient));
        //mapresult.setText("");
        for (int j = 0; j < result.size(); j++) {
            mapresult.append(result.get(j).toString() + "\n");
        }
        mapresult.updateUI();
    }//GEN-LAST:event_mapreduce4ActionPerformed

    private void mapreduce6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mapreduce6ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        // TODO add your handling code here:
        String map = null;
        String reduce = null;
        String finalize = null;
        mapresult.setText("");
        mapresult.updateUI();
        mapreduce.setSize(650, 450);
        mapreduce.setLocationRelativeTo(null);
        mapreduce.setVisible(true);
        try {
            map = TxtReader.Read("mapreduce/map_6.txt");
            reduce = TxtReader.Read("mapreduce/reduce_6.txt");
            finalize = TxtReader.Read("mapreduce/finalize_6.txt");
        } catch (IOException ex) {
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        }

        System.out.println(map);
        System.out.println(reduce);
        System.out.println(finalize);
        ArrayList result = new ArrayList(CRUD.MapReduce("a" + Integer.toString(i), map, reduce, finalize, mongoClient));
        //mapresult.setText("");
        for (int j = 0; j < result.size(); j++) {
            mapresult.append(result.get(j).toString() + "\n");
        }
        mapresult.updateUI();
    }//GEN-LAST:event_mapreduce6ActionPerformed

    private void mapreduce5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mapreduce5ActionPerformed
        // TODO add your handling code here:
        // TODO add your handling code here:
        // TODO add your handling code here:
        String map = null;
        String reduce = null;
        String finalize = null;
        mapresult.setText("");
        mapresult.updateUI();
        mapreduce.setSize(650, 450);
        mapreduce.setLocationRelativeTo(null);
        mapreduce.setVisible(true);
        try {
            map = TxtReader.Read("mapreduce/map_5.txt");
            reduce = TxtReader.Read("mapreduce/reduce_5.txt");
            finalize = TxtReader.Read("mapreduce/finalize_5.txt");
        } catch (IOException ex) {
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        }

        System.out.println(map);
        System.out.println(reduce);
        System.out.println(finalize);
        ArrayList result = new ArrayList(CRUD.MapReduce("a" + Integer.toString(i), map, reduce, finalize, mongoClient));
        //mapresult.setText("");
        for (int j = 0; j < result.size(); j++) {
            mapresult.append(result.get(j).toString() + "\n");
        }
        mapresult.updateUI();
    }//GEN-LAST:event_mapreduce5ActionPerformed

    private void ConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConnectActionPerformed
        // TODO add your handling code here:
        mongoClient = Connector.connect("localhost", 27017);
        JFrame frame = null;
        JOptionPane.showMessageDialog(frame, "Connect Success!");
    }//GEN-LAST:event_ConnectActionPerformed

    private void mapreduce7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mapreduce7ActionPerformed
        // TODO add your handling code here:
        String map = null;
        String reduce = null;
        String finalize = null;
        mapresult.setText("");
        mapresult.updateUI();
        mapreduce.setSize(650, 450);
        mapreduce.setLocationRelativeTo(null);
        mapreduce.setVisible(true);
        try {
            map = TxtReader.Read("mapreduce/map_7.txt");
            reduce = TxtReader.Read("mapreduce/reduce_7.txt");
        } catch (IOException ex) {
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        }

        System.out.println(map);
        System.out.println(reduce);
        System.out.println(finalize);
        ArrayList result = new ArrayList(CRUD.MapReduce("a" + Integer.toString(i), map, reduce, finalize, mongoClient));
        //mapresult.setText("");
        for (int j = 0; j < result.size(); j++) {
            mapresult.append(result.get(j).toString() + "\n");
        }
        mapresult.updateUI();
    }//GEN-LAST:event_mapreduce7ActionPerformed

    private void mapreduce8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mapreduce8ActionPerformed
        // TODO add your handling code here:
        String map = null;
        String reduce = null;
        String finalize = null;
        mapresult.setText("");
        mapresult.updateUI();
        mapreduce.setSize(650, 450);
        mapreduce.setLocationRelativeTo(null);
        mapreduce.setVisible(true);
        try {
            map = TxtReader.Read("mapreduce/map_7.txt");
            reduce = TxtReader.Read("mapreduce/reduce_7.txt");
        } catch (IOException ex) {
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        }

        System.out.println(map);
        System.out.println(reduce);
        System.out.println(finalize);
        ArrayList result7 = new ArrayList(CRUD.MapReduce("a" + Integer.toString(i), map, reduce, finalize, mongoClient));
        ArrayList caArray = new ArrayList();
        ArrayList coArray = new ArrayList();
        for (int j = 0; j < result7.size(); j++) {
            DBObject dbo7 = (DBObject) JSON.parse(result7.get(j).toString());
            System.out.println(dbo7);
            System.out.println(dbo7.get("carrier"));
            System.out.println(dbo7.get("value"));
            caArray.add(((DBObject) dbo7.get("_id")).get("carrier"));
            coArray.add(((DBObject) dbo7.get("value")).get("count"));
        }
        System.out.println(caArray);
        System.out.println(coArray);

        try {
            map = TxtReader.Read("mapreduce/map_8.txt");
            reduce = TxtReader.Read("mapreduce/reduce_8.txt");
        } catch (IOException ex) {
            Logger.getLogger(UI.class.getName()).log(Level.SEVERE, null, ex);
        }
        ArrayList result8 = new ArrayList(CRUD.MapReduce("a" + Integer.toString(i), map, reduce, finalize, mongoClient));
        System.out.println(result8);
        DBObject dbo8 = (DBObject) JSON.parse(result8.get(0).toString());
        System.out.println(dbo8);
        double total = Double.parseDouble(((DBObject) dbo8.get("value")).get("count").toString());
        for (int j = 0; j < result7.size(); j++) {
            double rate = Double.parseDouble(coArray.get(j).toString()) / total;
            String str = Double.toString(rate);
            mapresult.append(caArray.get(j).toString() +": "+ str + "\n");
        }
        mapresult.updateUI();

    }//GEN-LAST:event_mapreduce8ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Arrcity;
    private javax.swing.JTextField Arrcity1;
    private javax.swing.JTextField Carrier;
    private javax.swing.JTextField Carrier1;
    private javax.swing.JMenuItem Connect;
    private javax.swing.JTextField Crsarrtime;
    private javax.swing.JTextField Crsarrtime1;
    private javax.swing.JTextField Crsdeptime;
    private javax.swing.JTextField Crsdeptime1;
    private javax.swing.JTextField Depcity;
    private javax.swing.JTextField Depcity1;
    private javax.swing.JTextField Distance;
    private javax.swing.JTextField Distance1;
    private javax.swing.JTextField Tainum;
    private javax.swing.JTextField Tainum1;
    private javax.swing.JTextField arrcity;
    private javax.swing.JTextField arrstate;
    private javax.swing.JTextField arrtime;
    private javax.swing.JTextField arrtime1;
    private javax.swing.JButton cancel;
    private javax.swing.JButton cancel1;
    private javax.swing.JCheckBox cancelno;
    private javax.swing.JCheckBox cancelyes;
    private javax.swing.JTextField carrier;
    private javax.swing.JTextField count;
    private javax.swing.JTextField depcity;
    private javax.swing.JTextField depstate;
    private javax.swing.JTextField deptime;
    private javax.swing.JTextField deptime1;
    private javax.swing.JTextField downarrtime;
    private javax.swing.JTextField downdeptime;
    private javax.swing.JTextField downdistance;
    private javax.swing.JMenuItem edit;
    private javax.swing.JCheckBox ifcancel;
    private javax.swing.JCheckBox ifcancel1;
    private javax.swing.JFrame insertF;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JFrame mapreduce;
    private javax.swing.JMenuItem mapreduce1;
    private javax.swing.JMenuItem mapreduce2;
    private javax.swing.JMenuItem mapreduce3;
    private javax.swing.JMenuItem mapreduce4;
    private javax.swing.JMenuItem mapreduce5;
    private javax.swing.JMenuItem mapreduce6;
    private javax.swing.JMenuItem mapreduce7;
    private javax.swing.JMenuItem mapreduce8;
    private javax.swing.JTextArea mapresult;
    private javax.swing.JMenuItem remove;
    private javax.swing.JTable result;
    private javax.swing.JButton search;
    private javax.swing.JButton searchinresults;
    private javax.swing.JButton submit;
    private javax.swing.JButton submit1;
    private javax.swing.JTextField tailnum;
    private javax.swing.JTextField uparrtime;
    private javax.swing.JFrame updateF;
    private javax.swing.JTextField updeptime;
    private javax.swing.JTextField updistance;
    // End of variables declaration//GEN-END:variables
}
